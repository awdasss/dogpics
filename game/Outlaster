local textlabels = {}

local library = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/thedragonslayer2/dogpics/main/UI%20Lib"))();
local Hvisible = false
local httpService = game:GetService("HttpService");
local players = game:GetService("Players");
local client = players.LocalPlayer;
local emotelist = {}
local currentemote = nil
local emotes = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/thedragonslayer2/dogpics/main/need%20update!/emotes"))()
local function notif(str, tle, dur)
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = tle or str,
        Text = str,
        Duration = dur or 1
    })
end
for i, v in pairs(emotes) do
    table.insert(emotelist, i)
end

local animations, playanimation = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/thedragonslayer2/dogpics/main/need%20update!/animations"))()
table.sort(animations)
table.sort(emotelist)

local function round(n)
    return math.floor(tonumber(n) + 0.5)
end

local function add(v)
    if v:IsA("TextLabel") and v.Name == 'HintESP' then
        table.insert(textlabels, v)
    end
end

local function getItem()
    for _, v in pairs(workspace:GetDescendants()) do
        if (v.Name == ("ClickDetector") or v.Name == ("TouchInterest") or v.Name == ("TouchTransmitter")) and v.Parent and
            v.Parent.Parent and v.Parent.Parent.Name ~= client.Name then
            local instParent = nil
            local Metaverse = nil
            if (v.Parent:IsA("MeshPart")) then
                if v.Parent.Name ~= 'METAVERSEKEY' then
                    instParent = v.Parent
                elseif v.Parent.Name == 'METAVERSEKEY' then
                    Metaverse = v.Parent
                end
            elseif (v.Parent.Parent:IsA("MeshPart")) then
                if v.Parent.Name ~= 'METAVERSEKEY' then
                    instParent = v.Parent
                elseif v.Parent.Name == 'METAVERSEKEY' then
                    Metaverse = v.Parent
                end
            end
            if (instParent) then
                local bill = Instance.new('BillboardGui', instParent)
                bill.Name = 'HintESP'
                bill.Size = UDim2.new(1, 200, 1, 30)
                bill.Adornee = instParent
                bill.AlwaysOnTop = true
                local name = Instance.new('TextLabel', bill)
                name.Name = 'HintESP'
                name.TextWrapped = true
                name.Text = ('Hint '.. round((client.Character.HumanoidRootPart.Position - v.Parent.Position).Magnitude/3) ..'m')
                name.Font = 'ArialBold'
                name.Size = UDim2.new(1, 0, 1, 0)
                name.TextSize = 15
                name.TextTransparency = .2
                name.TextStrokeTransparency = 0.5
                name.TextYAlignment = 'Top'
                name.TextColor3 = Color3.new(1, 0, 0.266666)
                name.BackgroundTransparency = 1
                name.Visible = Hvisible
                add(name)
            end
        end
    end
end

--[[workspace.DescendantAdded:Connect(function(descendant)
    add(descendant)
end)]]

pcall(getItem)

client.CharacterAdded:Connect(function()
    wait(2)
    pcall(getItem)
end)

local ESP = library:CreateWindow(game:GetService"MarketplaceService":GetProductInfo(game.PlaceId).Name or "Outlaster");

ESP:AddToggle({
    text = ('Hint ESP Toggle');
    callback = function(tog)
        Hvisible = tog
    end
});

ESP:AddSlider({
    text = "ESP Text Size",
    min = 10,
    max = 30,
    value = 15,
    flag = "text_size"
});

ESP:AddColor({
    text = "ESP Text Color",
    color = Color3.new(1, 0, 0),
    flag = "textcolor"
});

ESP:AddBox({
    text = "WalkSpeed [Default 16]",
    value = 16,
    flag = "Speed"
});

ESP:AddLabel({
    text = "RightAlt To Hide/Show Gui",
});

ESP:AddLabel({
    text = "By: So So",
});

ESP:AddLabel({
    text = "YT Channel: Mr Jack",
});

ESP:AddButton({
    text = ('YT Channel Link'),
    callback = function()
        setclipboard(tostring('https://www.youtube.com/channel/UCVcgjkZV9Xdmz2higc93IqQ?sub_confirmation=1'))
    end
});
local aande = library:CreateWindow("Animations and Emotes", true)

aande:AddList({
    text = "Select Animation",
    flag = "chosen_animation",
    values = animations
});

aande:AddButton({
    text = ('Use Animation'),
    callback = function()
        pcall(function()
            playanimation(library.flags.chosen_animation)
        end)
    end
});


aande:AddList({
    text = "Select Emote",
    flag = "chosen_emote",
    values = emotelist
});

aande:AddBox({
    text = "Emote Speed [Default 1]",
    callback = function(v)
        pcall(function()
            if currentemote ~= nil then
                currentemote:AdjustSpeed(v)
            end
        end)
    end,
    flag = "chosen_emotespeed"
});

aande:AddButton({
    text = ('Use Emote'),
    callback = function()
        pcall(function()
            notif(library.flags.chosen_emote, 'Emote')
            for i, v in pairs(emotes) do
                if library.flags.chosen_emote == i then
                    if currentemote ~= nil then
                        currentemote:Stop()
                    end
                    local AnimationId = v
                    local Anim = Instance.new("Animation")
                    Anim.AnimationId = "rbxassetid://" .. AnimationId
                    currentemote = client.Character.Humanoid:LoadAnimation(Anim)
                    currentemote:Play(0)
                    currentemote:AdjustSpeed(library.flags.chosen_emotespeed)
                    client.Character.Animate.Disabled = true
                    client.Character.Humanoid.Running:connect(
                        function(speed)
                            if speed > 0 then
                                client.Character.Animate.Disabled = false
                                currentemote:Stop(0)
                            end
                        end)
                end
            end
        end)
    end
});

spawn(function()
    local mt = getrawmetatable(game)
    local old = mt.__newindex
    setreadonly(mt, false)

    mt.__newindex = newcclosure(function(t, k, v)
        pcall(function()
            if t == game:GetService("Players").LocalPlayer.Character.Humanoid and k == "WalkSpeed" then
                v = library.flags.Speed or 16
            end
        end)
        return old(t, k, v)
    end)
end)

spawn(function()
    while wait() do
        local torso = client.Character:FindFirstChild("HumanoidRootPart")
        if torso then
            for i, b in pairs(textlabels) do
                if b:IsDescendantOf(workspace) then
                        b.Text = ('Hint '.. round((torso.Position - b.Parent.Parent.Position).Magnitude/3) ..'m')
                        b.TextColor3 = library.flags.textcolor
                        b.TextSize = library.flags.text_size
                        b.Visible = Hvisible
                else
                    table.remove(textlabels, i)
                end
            end
        end
    end
end)
local listofgames = {}
local gamelist = loadstring(game:HttpGetAsync"https://raw.githubusercontent.com/thedragonslayer2/dogpics/main/need%20update!/supported%20game")()
for i, v in pairs(gamelist) do table.insert(listofgames, i) end
table.sort(listofgames)
ESP:AddList{
	text = "Games With Script",
	values = listofgames,
	callback = function(gamename)
		notif('Game Link Copied', gamename)
		for i, v in pairs(gamelist) do if gamename == i then setclipboard(tostring(v)) end end
	end
}
local notif = library:CreateWindow("NOTIFICATION")
notif:AddLabel{ text = "Want a Permanent Key?"}
notif:AddLabel{ text = "Become My Video Editor!"}
notif:AddLabel{ text = "For More Details"}
notif:AddLabel{ text = "Add Me On Discord"}
notif:AddLabel{ text = "JackIsCool#8443"}

library:Init()
